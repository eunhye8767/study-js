@keyframes ani-head {
    to { transform: rotateX(-10deg);}
}
@keyframes ani-running-leg {
    form {
        transform: rotateX(-30deg);
    }
    to {
        transform: rotateX(30deg);
    }
}
@keyframes ani-running-arm {
    form {
        transform: rotateY(30deg);
    }
    to {
        transform: rotateY(-30deg);
    }
}

body {
    height: 500vw;
    font-family: 'Apple SD Gothic Neo', 'Roboto', 'Noto Sans KR', NanumGothic, 'Malgun Gothic', sans-serif;
    -webkit-overflow-scrolling: touch;
    color: #555;
    background: #fff000;
    transition: background-color .5s;
}
body[data-char='ragirl'] {
    background: #ff7200;
}

.world {
    position: fixed;
    top: 0;
    left: 0;
    /* 브라우저 창 뷰사이즈 꽉차게 잡을 땐, vw / vh */
    width: 100vw;
    height: 100vh;
    /* 공간 자체를 3D 영역으로 설정할 때 */
    perspective: 1000px;
}
.stage {
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    /* 하위 요소들도 3D 효과를 주기위해 stage에 preserve-3d 설정 */
    transform-style: preserve-3d;
}
.house {
    width: 100vw;
    height: 100vh;
    transform-style: preserve-3d;
    /* 줌아웃 시키기  */
    transform: translateZ(-490vw);
}
.wall {
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(255,255,255,.8);
}
.wall-left {
    /* 
        width 값을 기존 width에서 1000을 곱해준 값을 적용해서
        left 값을 그 반값인 500vw 적용한 것.
        transform-origin은 기본값이 50% 50%(center).

        left 값을 줘도 되고 
        transform 에서 translateZ(-500vw) 값을 적용해줘도 된다.
     */
    /* left: -500vw; */
    width: 1000vw;
    background: #f8f8f8;
    transform: rotateY(90deg) translateZ(-500vw);
}
.wall-right {
    /* 
        left와 동일하게 적용을 해준 후에
        translateZ값을 주어 오른쪽에 붙여준다.
        그 값은 기본 박스 width 값을 적용해준다.

        right 경우 left로 주는 것이 아닌
        translateZ로만 값을 적용할 때엔 동일 -500vw가 아닌 기본 박스 width - 100vw 뺀 값을 적용해준다.
     */
    /* left: -500vw; translateZ(100vw) left로 값을 적용할 경우 translateZ 값 */
    width: 1000vw;
    background: #f8f8f8;
    transform: rotateY(90deg) translateZ(-400vw);
}
/*
    wall 위치 조절
    양수로 된 부분은 앞으로 튀어 나와보이고
    음수로 된 부분은 뒤로 들어가져 보인다.
 */
.wall-front-a { transform: translateZ(300vw);}
.wall-front-b { transform: translateZ(50vw);}
.wall-front-c { transform: translateZ(-200vw);}
.wall-front-d { transform: translateZ(-500vw);}

.wall-content {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
}
.wall-title {
    font-size: 5rem;
}
.progress-bar-con {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 100;
    width: 100vw;
    height: 5px;
    background: #555;
}
.progress-bar {
    width: 0;
    height: 5px;
    background: #00a8ff;
}

/* character */
.character {
    position: absolute;
    left: 12%;
    bottom: 5%;
    /* 창크기에 따라 값을 지정해주려고 vw(가로비율 폭 단위)로 값 지정 */
    width: 10vw;
    height: 15.58vw;    /* 비율계산 height / widht */
    transform-style: preserve-3d;
}
/* 
    방향에 따른 css 값을 미리 적용하고
    자바스크립트로 상황에 맞춰 data- 값을 지정
 */
.character[data-direction='forward'] { transform: rotateY(180deg); }
.character[data-direction='backward'] { transform: rotateY(0deg); }
.character[data-direction='left'] { transform: rotateY(-90deg); }
.character[data-direction='right'] { transform: rotateY(90deg); }
.character-face-con {
    position: absolute;
    transform-style: preserve-3d;
    transition: 1s;
}
.character-face {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-repeat: no-repeat;
    background-position: 0 0;
    background-size: cover;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}
.character-face.face-back {
    transform: rotateY(180deg);
}
.character-head {
    /* 
        전체 크기(B)에서 왼쪽 크기를 A라 칭할 때, A값을 전체 크기의 %로 표현하고자 할때
        calc( B / A * 100%) 
     */
    left: calc(42 / 856 * 100%);
    top: 0;
    z-index: 60;
    /* 
        전체 가로 폭(B)에서 실제 캐릭터의 특정 부분의 크기를 A라 칭할 때, 
        A값을 전체 크기의 %로 표현하고자 할때
        (전체 이미지 가로폭은 856px, 얼굴 이미지 가로폭 770px)
        px 이 아닌 %로 비율을 값을 적용하려 할 때 ==> calc( B / A * 100%) 
     */
    width: calc(770 / 856 * 100%);
    /* 
        전체 세로폭(B)에서 실제 캐릭터의 특정 부분의 크기를 A라 칭할 때, 
        A값을 전체 크기의 %로 표현하고자 할때
        (전체 이미지 세로폭은 856px, 얼굴 이미지 세로폭 770px)
        px 이 아닌 %로 비율을 값을 적용하려 할 때 ==> calc( B / A * 100%) 
     */
    height: calc(648 / 1334 * 100%);
    transform-origin: center bottom;
    animation: ani-head 0.6s infinite alternate cubic-bezier(0.46, 0.18, 0.66, 0.93);
}
.character-head-face.face-front { background-image: url('../images/ilbuni_head_front.png'); }
.character-head-face.face-back { background-image: url('../images/ilbuni_head_back.png'); }
.character-torso {
    left: calc(208 / 856 * 100%);
    top: calc(647 / 1334 * 100%);
    z-index: 50;
    width: calc(428 / 856 * 100%);
    height: calc(385 / 1334 * 100%);
    transform-origin: center center;
}
.character-torso-face.face-front { background-image: url('../images/ilbuni_body_front.png'); }
.character-torso-face.face-back { background-image: url('../images/ilbuni_body_back.png'); }
.character-arm-right {
    left: 0;
    top: calc(648 / 1334 * 100%);
    width: calc(244 / 856 * 100%);
    height: calc(307 / 1334 * 100%);
    transform-origin: right top;
}
.character-arm-right .face-front { background-image: url('../images/ilbuni_arm_0.png'); }
.character-arm-right .face-back { background-image: url('../images/ilbuni_arm_1.png'); }
.character-arm-left {
    left: calc(600 / 856 * 100%);
    top: calc(648 / 1334 * 100%);
    width: calc(244 / 856 * 100%);
    height: calc(307 / 1334 * 100%);
    transform-origin: left top;
}
.character-arm-left .face-front { background-image: url('../images/ilbuni_arm_1.png'); }
.character-arm-left .face-back { background-image: url('../images/ilbuni_arm_0.png'); }
.character-leg-right {
    left: calc(200 / 856 * 100%);
    top: calc(1031 / 1334 * 100%);
    width: calc(230 /  856 * 100%);
    height: calc(300 / 1334 * 100%);
    transform-origin: center top;
}
.character-leg-right .face-front { background-image: url('../images/ilbuni_leg_0.png'); }
.character-leg-right .face-back { background-image: url('../images/ilbuni_leg_1.png'); }
.character-leg-left {
    left: calc(414 / 856 * 100%);
    top: calc(1031 / 1334 * 100%);
    width: calc(230 /  856 * 100%);
    height: calc(300 / 1334 * 100%);
    transform-origin: center top;
}
.character-leg-left .face-front { background-image: url('../images/ilbuni_leg_1.png'); }
.character-leg-left .face-back { background-image: url('../images/ilbuni_leg_0.png'); }

/* 캐릭터에 running 클래스가 붙으면 팔다리가 움직임 (스크롤 이벤트) */
.character.running .character-leg-right { animation: ani-running-leg 0.2s alternate infinite linear; }
.character.running .character-leg-left { animation: ani-running-leg 0.2s alternate-reverse infinite linear; }
.character.running .character-arm { animation: ani-running-arm 0.2s alternate infinite linear; }

body[data-char='ragirl'] .character {
    width: 12vw;
    height: calc(12vw * 1.4135);
}
body[data-char='ragirl'] .character-head {
    left: calc(23 / 948 * 100%);
    width: calc(920 / 948 * 100%);
    height: calc(750 / 1340 * 100%);
}
body[data-char='ragirl'] .character-head-face.face-front { background-image: url('../images/ragirl_head_front.png'); }
body[data-char='ragirl'] .character-head-face.face-back { background-image: url('../images/ragirl_head_back.png'); }
body[data-char='ragirl'] .character-torso {
    left: calc(273 / 948 * 100%);
    top: calc(630 / 1340 * 100%);
    z-index: 50;
    width: calc(402 / 948 * 100%);
    height: calc(444 / 1340 * 100%);
    transform-origin: center center;
}
body[data-char='ragirl'] .character-torso-face.face-front { background-image: url('../images/ragirl_body_front.png'); }
body[data-char='ragirl'] .character-torso-face.face-back { background-image: url('../images/ragirl_body_back.png'); }
body[data-char='ragirl'] .character-arm-right {
    left: calc(134 / 948 * 100%);
    top: calc(709 / 1340 * 100%);
    width: calc(138 / 948 * 100%);
    height: calc(300 / 1340 * 100%);
    transform-origin: right top;
}
body[data-char='ragirl'] .character-arm-right .face-front { background-image: url('../images/ragirl_arm_0_front.png'); }
body[data-char='ragirl'] .character-arm-right .face-back { background-image: url('../images/ragirl_arm_1_back.png'); }
body[data-char='ragirl'] .character-arm-left {
    left: calc(675 / 948 * 100%);
    top: calc(709 / 1340 * 100%);
    width: calc(138 / 948 * 100%);
    height: calc(300 / 1340 * 100%);
    transform-origin: left top;
}
body[data-char='ragirl'] .character-arm-left .face-front { background-image: url('../images/ragirl_arm_1_front.png'); }
body[data-char='ragirl'] .character-arm-left .face-back { background-image: url('../images/ragirl_arm_0_back.png'); }
body[data-char='ragirl'] .character-leg-right {
    left: calc(290 / 948 * 100%);
    top: calc(1075 / 1340 * 100%);
    width: calc(186 / 948 * 100%);
    height: calc(264 / 1340 * 100%);
    transform-origin: center top;
}
body[data-char='ragirl'] .character-leg-right .face-front { background-image: url('../images/ragirl_leg_0.png'); }
body[data-char='ragirl'] .character-leg-right .face-back { background-image: url('../images/ragirl_leg_1.png'); }
body[data-char='ragirl'] .character-leg-left {
    left: calc(474 / 948 * 100%);
    top: calc(1075 / 1340 * 100%);
    width: calc(186 / 948 * 100%);
    height: calc(264 / 1340 * 100%);
    transform-origin: center top;
}
body[data-char='ragirl'] .character-leg-left .face-front { background-image: url('../images/ragirl_leg_1.png'); }
body[data-char='ragirl'] .character-leg-left .face-back { background-image: url('../images/ragirl_leg_0.png'); }

/* character button */
.select-character {
    display: flex;
    align-items: center;
    position: fixed;
    right: 10px;
    top: 10px;
    z-index: 100;
}
.select-character-btn {
    width: 40px;
    height: 40px;
    margin-left: 5px;
    border: 0;
    background-color: transparent;
    background-repeat: no-repeat;
    background-position: 50% 50%;
    background-size: contain;
    cursor: pointer;
    transition: 0.5s;
}
.select-character-btn-ilbuni {
    background-image: url('../images/ilbuni_head_front.png');
    background-size: 36px auto;
}
.select-character-btn-ragirl {
    background-image: url('../images/ragirl_head_front.png');
    opacity: 0.5;
}
body[data-char='ragirl'] .select-character-btn-ilbuni {
    opacity: 0.5;
}
body[data-char='ilbuni'] .select-character-btn-ilbuni,
body[data-char='ragirl'] .select-character-btn-ragirl {
    opacity: 1;
}
